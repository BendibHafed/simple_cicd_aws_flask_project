name: CI pipeline

on:
  pull_request:
    branches: [ main ]

jobs:
  build-test-plan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: pip install -r app/requirements.txt

    - name: Run tests
      run: pytest app/tests/

    - name: Build Lambda Package (for validation only)
      working-directory: app
      run: |
        rm -rf package && mkdir package
        pip install -r requirements.txt -t package --no-cache-dir 
        cp *.py package/
        (cd package && zip -r ../../app.zip . -x "*__pycache__*" "tests/*")
   
    - name: Move Lambda Package to Terraform folder
      run: mv app.zip terraform/

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.13.0
    #  Only configure AWS creds if not running under ACT
    - name: Configure AWS credentials.
      if: ${{ !env.ACT }}
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Setup Terraform Plugin Cache
      if: ${{ !env.ACT }}
      run: |
        mkdir -p ~/.terraform.d/plugin-cache
        echo 'plugin_cache_dir = "$HOME/.terraform.d/plugin-cache"' > ~/.terraformr

        
    - name: Terraform Init (Local State)
      working-directory: terraform
      run: |
        rm -rf .terraform .terraform.lock.hcl
        cat > backend_override.tf <<EOF
        terraform {
          backend "local" {}
        }
        EOF
        terraform init -reconfigure -input=false -no-color
           
    - name: Terraform Format Check
      working-directory: terraform
      run: terraform fmt -check -recursive
      
    - name: Terraform Validate
      working-directory: terraform
      run: terraform validate -no-color

    - name: Terraform Plan (Local State)
      working-directory: terraform
      run: |
        if [ "${{ env.ACT }}" = "true" ]; then
          terraform plan -var="use_localstack=true" -input=false -no-color -lock=false
        else
          terraform plan \
            -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            -var="use_localstack=false" \
            -input=false -no-color -lock=false
        fi